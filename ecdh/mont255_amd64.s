// Code autogenerated by go generate: DO NOT EDIT.

// +build amd64

#include "internal/field/fp255_amd64.h"
#include "mont_amd64.h"

#define regWork   DI
#define regMove   CX

#define x1 0*SizeField(regWork)
#define x2 1*SizeField(regWork)
#define z2 2*SizeField(regWork)
#define x3 3*SizeField(regWork)
#define z3 4*SizeField(regWork)
#define t0 5*SizeField(regWork)
#define t1 6*SizeField(regWork)
#define b0 7*SizeField(regWork)
#define b1 9*SizeField(regWork)

// func ladderStepLeg255(wbuf []byte, move uint)
// wbuf contains variables used in the Montgomery's ladder step,
// where {x1,x2,z2,x3,z3,t0,t1} are seven field.Element of field.Size bytes, and
//       {b0,b1} are two field.bigElement of 2*field.Size bytes.
TEXT ·ladderStepLegX255(SB),NOSPLIT,$0
    MOVQ wbuf+0(FP), regWork
    MOVQ move+24(FP), regMove
    ladderStepLeg()
    RET

// func ladderStepBmi2Adx255(wbuf []byte, move uint)
// wbuf contains variables used in the Montgomery's ladder step,
// where {x1,x2,z2,x3,z3,t0,t1} are seven field.Element of field.Size bytes, and
//       {b0,b1} are two field.bigElement of 2*field.Size bytes.
TEXT ·ladderStepBmi2AdxX255(SB),NOSPLIT,$0
    MOVQ wbuf+0(FP), regWork
    MOVQ move+24(FP), regMove
    ladderStepBmi2Adx()
    RET

#undef regMove
#undef x1
#undef x2
#undef z2
#undef x3
#undef z3
#undef t0
#undef t1
#undef b0
#undef b1

#define regMu CX
#define regSwap R9
#define x1 0*SizeField(regWork)
#define z1 1*SizeField(regWork)
#define x2 2*SizeField(regWork)
#define z2 3*SizeField(regWork)
#define b0 4*SizeField(regWork)
#define b1 6*SizeField(regWork)
#define ui 0(regMu)

// func difAdditionLegX255(wbuf []byte, mu []byte, swap uint)
// wbuf contains variables used in the Joye's ladder step,
// where {x1,z1,x2,z2} are four field.Element of field.Size bytes, and
//       {b0,b1} are two field.bigElement of 2*field.Size bytes.
TEXT ·difAdditionLegX255(SB),NOSPLIT,$0
    MOVQ wbuf+0(FP), regWork
    MOVQ mu+24(FP), regMu
    MOVQ swap+48(FP), regSwap
    difAdditionLeg()
    RET

// func difAdditionBmi2AdxX255(wbuf []byte, mu []byte, swap uint)
// wbuf contains variables used in the Joye's ladder step,
// where {x1,z1,x2,z2} are four field.Element of field.Size bytes, and
//       {b0,b1} are two field.bigElement of 2*field.Size bytes.
TEXT ·difAdditionBmi2AdxX255(SB),NOSPLIT,$0
    MOVQ wbuf+0(FP), regWork
    MOVQ mu+24(FP), regMu
    MOVQ swap+48(FP), regSwap
    difAdditionBmi2Adx()
    RET

// func doubleLegX255(wbuf []byte)
// wbuf contains variables used in the Joye's ladder step,
// where {x1,z1,x2,z2} are four field.Element of field.Size bytes, and
//       {b0,b1} are two field.bigElement of 2*field.Size bytes.
TEXT ·doubleLegX255(SB),NOSPLIT,$0
    MOVQ wbuf+0(FP), regWork
    doubleLeg()
    RET

// func doubleBmi2AdxX255(wbuf *workJoye)
// wbuf contains variables used in the Joye's ladder step,
// where {x1,z1,x2,z2} are four field.Element of field.Size bytes, and
//       {b0,b1} are two field.bigElement of 2*field.Size bytes.
TEXT ·doubleBmi2AdxX255(SB),NOSPLIT,$0
    MOVQ wbuf+0(FP), regWork
    doubleBmi2Adx()
    RET

#undef regWork
#undef regMu
#undef regSwap
#undef x1
#undef z1
#undef x2
#undef z2
#undef b0
#undef b1
#undef ui

// Code autogenerated by go generate: DO NOT EDIT.
