package ecdsaTSS

import (
	"github.com/cloudflare/circl/group"
	"github.com/cloudflare/circl/secretsharing"
)

// Party struct for Presign
type partyPreSign struct {
	myGroup group.Group
	index   uint // index starting from 1...n.

	// nonce k
	polyki    group.Scalar          // first coefficient of secret polynomial k_i for this party i
	sski      []secretsharing.Share // the shares of polynomial k_i for every single party
	obfCoefki []group.Element       // obfuscated coefficient for proving correctness of sski
	sharek    secretsharing.Share   // the final share of nonce k
	sharekInv secretsharing.Share   // the final share of nonce k inverse
	sharekG   group.Element         // the final share of [k]G
	obfCoefks [][]group.Element     // obfuscated coefficient received from other parties

	// blinding b
	polybi    group.Scalar          // first coefficient of secret polynomial b_i for this party i
	ssbi      []secretsharing.Share // the shares of polynomial b_i for every single party
	obfCoefbi []group.Element       // obfuscated coefficient for proving correctness of ssbi
	shareb    secretsharing.Share   // the final share of blinding b
	obfCoefbs [][]group.Element     // obfuscated coefficient received from other parties

	// k * b
	sharekb secretsharing.Share // the final share of k*b
	kbInv   group.Scalar        // the inverse of k*b

	// r
	r group.Scalar // the x coordinate of [k]G
}

type partySign struct {
	myGroup group.Group

	index     uint                // index starting from 1...n.
	sharesk   secretsharing.Share // The share of secret key, s, for this party, generated by the server
	sharekInv secretsharing.Share // the final share of nonce k inverse
	sharesig  secretsharing.Share // the final signature share

	// r
	r group.Scalar // the x coordinate of [k]G
	// message hash
	hashMSG group.Scalar
}
