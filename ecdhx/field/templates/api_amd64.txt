// Code autogenerated by go generate; DO NOT EDIT.

// +build amd64

#include "fp{{ .Field }}_amd64.h"

// func cSelect{{ .Field }}(x, y *Element{{ .Field }}, b uint)
TEXT ·cSelect{{ .Field }}(SB),NOSPLIT,$0
    MOVQ x+0(FP), DI
    MOVQ y+8(FP), SI
    MOVQ b+16(FP), BX
    cselect(0(DI),0(SI),BX)
    RET

// func cSwap{{ .Field }}(x, y *Element{{ .Field }}, b uint)
TEXT ·cSwap{{ .Field }}(SB),NOSPLIT,$0
    MOVQ x+0(FP), DI
    MOVQ y+8(FP), SI
    MOVQ b+16(FP), BX
    cswap(0(DI),0(SI),BX)
    RET

// func addSub{{ .Field }}(z, x *Element{{ .Field }})
TEXT ·addSub{{ .Field }}(SB),NOSPLIT,$0
    MOVQ z+0(FP), DI
    MOVQ x+8(FP), SI
    addSub(0(DI),0(SI))
    RET

// func addLeg{{ .Field }}(z,x,y *Element{{ .Field }})
TEXT ·addLeg{{ .Field }}(SB),NOSPLIT,$0
    MOVQ z+0(FP), DI
    MOVQ x+8(FP), SI
    MOVQ y+16(FP), BX
    addition(0(DI),0(SI),0(BX))
    RET

// func addAdx{{ .Field }}(z,x,y *Element{{ .Field }})
TEXT ·addAdx{{ .Field }}(SB),NOSPLIT,$0
    MOVQ z+0(FP), DI
    MOVQ x+8(FP), SI
    MOVQ y+16(FP), BX
    additionAdx(0(DI),0(SI),0(BX))
    RET

// func sub{{ .Field }}(z,x,y *Element{{ .Field }})
TEXT ·sub{{ .Field }}(SB),NOSPLIT,$0
    MOVQ z+0(FP), DI
    MOVQ x+8(FP), SI
    MOVQ y+16(FP), BX
    subtraction(0(DI),0(SI),0(BX))
    RET

// func mulA24{{ .Field }}(z, x *Element{{ .Field }})
TEXT ·mulA24{{ .Field }}(SB),NOSPLIT,$0
    MOVQ z+0(FP), DI
    MOVQ x+8(FP), SI
    multiplyA24(0(DI),0(SI))
    RET

// func mulA24Adx{{ .Field }}(z, x *Element{{ .Field }})
TEXT ·mulA24Adx{{ .Field }}(SB),NOSPLIT,$0
    MOVQ z+0(FP), DI
    MOVQ x+8(FP), SI
    multiplyA24Adx(0(DI),0(SI))
    RET

// func intMul{{ .Field }}(z *bigElement{{ .Field }}, x, y *Element{{ .Field }})
TEXT ·intMul{{ .Field }}(SB),NOSPLIT,$0
    MOVQ z+0(FP), DI
    MOVQ x+8(FP), SI
    MOVQ y+16(FP), BX
    integerMul(0(DI),0(SI),0(BX))
    RET

// func intMulAdx{{ .Field }}(z *bigElement{{ .Field }}, x, y *Element{{ .Field }})
TEXT ·intMulAdx{{ .Field }}(SB),NOSPLIT,$0
    MOVQ z+0(FP), DI
    MOVQ x+8(FP), SI
    MOVQ y+16(FP), BX
    integerMulAdx(0(DI),0(SI),0(BX))
    RET

// func intSqr{{ .Field }}(z *bigElement{{ .Field }}, x *Element{{ .Field }})
TEXT ·intSqr{{ .Field }}(SB),NOSPLIT,$0
    MOVQ z+0(FP), DI
    MOVQ x+8(FP), SI
    integerSqr(0(DI),0(SI))
    RET

// func intSqrAdx{{ .Field }}(z *bigElement{{ .Field }}, x *Element{{ .Field }})
TEXT ·intSqrAdx{{ .Field }}(SB),NOSPLIT,$0
    MOVQ z+0(FP), DI
    MOVQ x+8(FP), SI
    integerSqrAdx(0(DI),0(SI))
    RET

// func reduce{{ .Field }}(z *Element{{ .Field }}, x *bigElement{{ .Field }})
TEXT ·reduce{{ .Field }}(SB),NOSPLIT,$0
    MOVQ z+0(FP), DI
    MOVQ x+8(FP), SI
    reduceFromDouble(0(DI),0(SI))
    RET

// func reduceAdx{{ .Field }}(z *Element{{ .Field }}, x *bigElement{{ .Field }})
TEXT ·reduceAdx{{ .Field }}(SB),NOSPLIT,$0
    MOVQ z+0(FP), DI
    MOVQ x+8(FP), SI
    reduceFromDoubleAdx(0(DI),0(SI))
    RET

// func sqrn{{ .Field }}(z *Element{{ .Field }}, buffer *bigElement{{ .Field }}, times uint)
TEXT ·sqrn{{ .Field }}(SB),NOSPLIT,$0
    MOVQ z+0(FP), DI
    MOVQ buffer+8(FP), SI
    MOVQ times+16(FP),BX
    L0:
        CMPQ BX, $0
        JZ L1
        integerSqr(0(SI),0(DI))
        reduceFromDouble(0(DI),0(SI))
        DECQ BX
        JMP L0
    L1:
    RET

// func sqrnAdx{{ .Field }}(z *Element{{ .Field }}, buffer *bigElement{{ .Field }}, times uint)
TEXT ·sqrnAdx{{ .Field }}(SB),NOSPLIT,$0
    MOVQ z+0(FP), DI
    MOVQ buffer+8(FP), SI
    MOVQ times+16(FP),BX
    L0:
        CMPQ BX, $0
        JZ L1
        integerSqrAdx(0(SI),0(DI))
        reduceFromDoubleAdx(0(DI),0(SI))
        DECQ BX
        JMP L0
    L1:
    RET

// Code autogenerated by go generate; DO NOT EDIT.
